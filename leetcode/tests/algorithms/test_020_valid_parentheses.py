from leetcode.algorithms.problem_020_valid_parentheses import Solution

def test_01():
    assert Solution().isValid('') == True

def test_02():
    assert Solution().isValid('(') == False

def test_03():
    assert Solution().isValid(')') == False

def test_04():
    assert Solution().isValid('()') == True

def test_05():
    assert Solution().isValid('()()') == True

def test_06():
    assert Solution().isValid('(){}[]') == True

def test_07():
    assert Solution().isValid('(]') == False

def test_08():
    assert Solution().isValid('([])') == True

def test_09():
    assert Solution().isValid('([)]') == False

def test_10():
    s = (
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([('
       '[([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([([()])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])]'
       ')])])])])])])])])])])])])])])])])])])])])])])])]'
    )
    assert Solution().isValid(s) == True

if __name__ == "__main__":
    test_10()
